{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","data","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","props_","match","params","SignIn","email","password","handleChange","event","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","createProjectAction","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d302fa42.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log out</a></li>\n      <li>\n        <NavLink to='/' className='btn btn-floating pink lighten-1'> {props.profile.initials} </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    )\n    .then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    })\n    .catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    )\n    .then((res) => {\n      return firestore\n        .collection(\"users\")          // if collection doesn't exit it will create one\n        .doc(res.user.uid)\n        .set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n    })\n    .then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    })\n    .catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">LogIn</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\"> React-Redux-Firebase </Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // firebase reducer from \"rootReducer.js\" data and objects\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {/* if there is notications please map else ignore */}\n            {notifications && notifications.map(data => {\n              return (\n                <li key={data.id}>\n                  <span className=\"pink-text\">{data.user} </span>\n                  <span>{data.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(data.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n \nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return ( \n    <div className=\"project-list section\">\n      { projects && projects.map(project => {     // if projects then start projects mapping\n        return (\n          <Link to={\"/project/\" + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        );\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    // if not logged \n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    ) \n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from \"react-router-dom\"\nimport moment from \"moment\"\n\nconst ProjectDetails = (props) => {\n  // project variable is from mapStateToProps return \"project\" which is from our main reducer \"rootReducer.js\"\n  const { project, auth } = props;\n  // if not logged \n  if (!auth.uid) return <Redirect to=\"/signin\" />; \n  \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName}  {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props_) => {\n  const id = props_.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project_ = projects ? projects[id] : null;\n\n  return {\n    project: project_,\n    auth: state.firebase.auth\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from \"react-router-dom\"\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    // from mapStateToProps\n    const { authError, auth } = this.props;\n    // if logged in\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          \n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">LOGIN</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // map main reducer \"rootReducer.js\" to props. authError from authReducer in \"rootReducer.js\"\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    // from mapStateToProps\n    const { auth, authError } = this.props;\n    // if logged in\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProjectAction } from '../../store/actions/projectActions'\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    // if not logged \n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          \n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">CREATE</button>\n          </div>\n        </form>\n      </div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispactchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProjectAction(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispactchToProps)(CreateProject)\n","export const createProjectAction = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    })\n    .then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    })\n    .catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer","const initState = {\n  projects: [\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project)    // action.project is from projectActions.js \n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log(\"created project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/firebase-auth'\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyCNTIsCU6cb6nfpg2kwpYX-YXoHlJ14ioA\",\n  authDomain: \"react-redux-firebase-67bb5.firebaseapp.com\",\n  databaseURL: \"https://react-redux-firebase-67bb5.firebaseio.com\",\n  projectId: \"react-redux-firebase-67bb5\",\n  storageBucket: \"react-redux-firebase-67bb5.appspot.com\",\n  messagingSenderId: \"853883243330\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport { reduxFirestore, getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig'\n\nconst store = createStore(rootReducer,\n  compose (\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, \n      { \n        useFirestoreForProfile: true, // tells firebase to use firestore(database) profile\n        userProfile: 'users',         //   and use the collection 'users for it'\n        attachAuthIsReady: true\n      }\n    )\n  ) \n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    , document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n"],"sourceRoot":""}